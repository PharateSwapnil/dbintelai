# Power System Database Chatbot - Local Setup Guide

## Prerequisites
- Python 3.9+ installed
- PostgreSQL database (optional, for real database connections)
- API keys for LLM providers (Google Gemini required, GROQ optional for Llama3 model)

## Setup Steps

1. Clone the repository:
   ```
   git clone <repository-url>
   cd <repository-directory>
   ```

2. Set up a virtual environment:
   ```
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   ```

3. Install dependencies:
   ```
   # See install_deps.txt for the complete list of required packages and versions
   pip install email-validator flask flask-sqlalchemy gunicorn langchain langchain-community langchain-core langchain-google-genai langchain-groq langgraph psycopg2-binary pydantic python-dotenv rdflib requests-toolbelt
   ```

4. Configure environment variables:
   - Copy `.env.example` to `.env` (or create one from scratch)
   - Add your Google API key for Gemini model access
   - Add your GROQ API key if you want to use the Llama3 model
   - Configure your database connection string (for PostgreSQL) if needed

5. (Optional) Set up PostgreSQL database:
   - Create a new database
   - Update the DATABASE_URL in .env file
   - Run the included schema.sql file to create tables:
     ```
     psql -U <username> -d <database> -f schema.sql
     ```

## Running the Application

1. Start the Flask application:
   ```
   python main.py
   ```
   or with Gunicorn (recommended for production):
   ```
   gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app
   ```

2. Access the application in your browser:
   ```
   http://localhost:5000
   ```

## Usage Instructions

1. Select your database type (GraphDB, PostgreSQL, AWS RDS, or AWS Neptune)
2. Configure database connection if needed
3. Choose your preferred model (Auto, Gemini, or Llama3)
4. Start asking questions about power system equipment data
5. The system will generate appropriate queries (SPARQL or SQL) based on your database type

## Troubleshooting

- If you encounter API key issues, verify your .env file has the correct keys
- For database connection problems, check your DATABASE_URL format and credentials
- Port conflicts can be resolved by changing the PORT value in the .env file

## Sample Queries

- "What are the locations of all substations?"
- "List all transformers with voltage level above 300"
- "Show the relationship between terminals and transformers"